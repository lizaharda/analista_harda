{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Принятие решений в бизнесе на основе данных. А/В тестирование. (Toma de decisiones empresariales basada en datos. Pruebas A / B.)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Приоритизация гипотез (Priorizar hipótesis)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 9 entries, 0 to 8\n",
      "Data columns (total 5 columns):\n",
      "Hypothesis    9 non-null object\n",
      "Reach         9 non-null int64\n",
      "Impact        9 non-null int64\n",
      "Confidence    9 non-null int64\n",
      "Efforts       9 non-null int64\n",
      "dtypes: int64(4), object(1)\n",
      "memory usage: 488.0+ bytes\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import scipy.stats as stats\n",
    "import datetime as dt\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "hyp=pd.read_csv('/datasets/hypothesis.csv')\n",
    "hyp.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 9 entries, 0 to 8\n",
      "Data columns (total 5 columns):\n",
      "hypothesis    9 non-null object\n",
      "reach         9 non-null int64\n",
      "impact        9 non-null int64\n",
      "confidence    9 non-null int64\n",
      "efforts       9 non-null int64\n",
      "dtypes: int64(4), object(1)\n",
      "memory usage: 488.0+ bytes\n"
     ]
    }
   ],
   "source": [
    "#\n",
    "hyp.columns=hyp.columns.str.lower()\n",
    "hyp.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hypothesis</th>\n",
       "      <th>reach</th>\n",
       "      <th>impact</th>\n",
       "      <th>confidence</th>\n",
       "      <th>efforts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Добавить два новых канала привлечения трафика,...</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Запустить собственную службу доставки, что сок...</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Добавить блоки рекомендаций товаров на сайт ин...</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Изменить структура категорий, что увеличит кон...</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Изменить цвет фона главной страницы, чтобы уве...</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>Добавить страницу отзывов клиентов о магазине,...</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>Показать на главной странице баннеры с актуаль...</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>Добавить форму подписки на все основные страни...</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>Запустить акцию, дающую скидку на товар в день...</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                          hypothesis  reach  impact  \\\n",
       "0  Добавить два новых канала привлечения трафика,...      3      10   \n",
       "1  Запустить собственную службу доставки, что сок...      2       5   \n",
       "2  Добавить блоки рекомендаций товаров на сайт ин...      8       3   \n",
       "3  Изменить структура категорий, что увеличит кон...      8       3   \n",
       "4  Изменить цвет фона главной страницы, чтобы уве...      3       1   \n",
       "5  Добавить страницу отзывов клиентов о магазине,...      3       2   \n",
       "6  Показать на главной странице баннеры с актуаль...      5       3   \n",
       "7  Добавить форму подписки на все основные страни...     10       7   \n",
       "8  Запустить акцию, дающую скидку на товар в день...      1       9   \n",
       "\n",
       "   confidence  efforts  \n",
       "0           8        6  \n",
       "1           4       10  \n",
       "2           7        3  \n",
       "3           3        8  \n",
       "4           1        1  \n",
       "5           2        3  \n",
       "6           8        3  \n",
       "7           8        5  \n",
       "8           9        5  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(hyp)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0    13.333333\n",
      "1     2.000000\n",
      "2     7.000000\n",
      "3     1.125000\n",
      "4     1.000000\n",
      "5     1.333333\n",
      "6     8.000000\n",
      "7    11.200000\n",
      "8    16.200000\n",
      "Name: ice, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "hyp['ice']=(hyp['impact']*hyp['confidence'])/hyp['efforts']\n",
    "print(hyp['ice'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0     40.0\n",
      "1      4.0\n",
      "2     56.0\n",
      "3      9.0\n",
      "4      3.0\n",
      "5      4.0\n",
      "6     40.0\n",
      "7    112.0\n",
      "8     16.2\n",
      "Name: rice, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "hyp['rice']=hyp['ice']*hyp['reach']\n",
    "#hyp['rice2']=(hyp['impact']*hyp['confidence']*hyp['reach'])/hyp['efforts']\n",
    "print(hyp['rice'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                          hypothesis   rice\n",
      "7  Добавить форму подписки на все основные страни...  112.0\n",
      "2  Добавить блоки рекомендаций товаров на сайт ин...   56.0\n",
      "0  Добавить два новых канала привлечения трафика,...   40.0\n",
      "6  Показать на главной странице баннеры с актуаль...   40.0\n",
      "8  Запустить акцию, дающую скидку на товар в день...   16.2\n",
      "3  Изменить структура категорий, что увеличит кон...    9.0\n",
      "1  Запустить собственную службу доставки, что сок...    4.0\n",
      "5  Добавить страницу отзывов клиентов о магазине,...    4.0\n",
      "4  Изменить цвет фона главной страницы, чтобы уве...    3.0\n"
     ]
    }
   ],
   "source": [
    "print(hyp[['hypothesis','rice']].sort_values(by='rice',ascending=False))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                          hypothesis        ice\n",
      "8  Запустить акцию, дающую скидку на товар в день...  16.200000\n",
      "0  Добавить два новых канала привлечения трафика,...  13.333333\n",
      "7  Добавить форму подписки на все основные страни...  11.200000\n",
      "6  Показать на главной странице баннеры с актуаль...   8.000000\n",
      "2  Добавить блоки рекомендаций товаров на сайт ин...   7.000000\n",
      "1  Запустить собственную службу доставки, что сок...   2.000000\n",
      "5  Добавить страницу отзывов клиентов о магазине,...   1.333333\n",
      "3  Изменить структура категорий, что увеличит кон...   1.125000\n",
      "4  Изменить цвет фона главной страницы, чтобы уве...   1.000000\n"
     ]
    }
   ],
   "source": [
    "print(hyp[['hypothesis','ice']].sort_values(by='ice',ascending=False))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7f4808656190>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "hyp.set_index('hypothesis')[['ice','rice']].plot(kind='barh',grid=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Вывод\n",
    "При приоритизации гипотез с помощью парамета ice наиболее важными являются 8,0 и 7 гипотеза. При приоритизации гипотез с помощью парамета rice наиболее важными являются 7,2 и 0 гипотеза. Такое изменение произошло в приоритетах в связи с тем, что при рассчёта параметра rice используется коэффициент reach (oхват пользователей) и у 7 гипотезы он больший нежели у 0 и 8, которые являются наиболее важными по результатам приоритезации с помощью ice.\n",
    "\n",
    "\n",
    "Producción\n",
    "Al priorizar hipótesis utilizando el parámetro de hielo, las hipótesis 8.0 y 7 son las más importantes. Al priorizar hipótesis utilizando el parámetro de arroz, las hipótesis 7.2 y 0 son las más importantes. Tal cambio se produjo en las prioridades debido a que se utiliza el coeficiente de alcance (alcance de usuario) al calcular el parámetro arroz, y en la hipótesis 7 es mayor que en 0 y 8, que son los más importantes según los resultados de la priorización. usando hielo.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Анализ A/B-теста (Análisis de prueba A / B)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Просмотр данных и подготовка данных (Vista de datos y preparación de datos)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1197 entries, 0 to 1196\n",
      "Data columns (total 5 columns):\n",
      "transactionId    1197 non-null int64\n",
      "visitorId        1197 non-null int64\n",
      "date             1197 non-null object\n",
      "revenue          1197 non-null int64\n",
      "group            1197 non-null object\n",
      "dtypes: int64(3), object(2)\n",
      "memory usage: 46.9+ KB\n"
     ]
    }
   ],
   "source": [
    "orders=pd.read_csv('/datasets/orders.csv')\n",
    "orders.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>transactionId</th>\n",
       "      <th>visitorId</th>\n",
       "      <th>date</th>\n",
       "      <th>revenue</th>\n",
       "      <th>group</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>330</td>\n",
       "      <td>3006440800</td>\n",
       "      <td>1738359350</td>\n",
       "      <td>2019-08-28</td>\n",
       "      <td>890</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>935</td>\n",
       "      <td>1399322126</td>\n",
       "      <td>1184607010</td>\n",
       "      <td>2019-08-27</td>\n",
       "      <td>7390</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>338</td>\n",
       "      <td>2714235110</td>\n",
       "      <td>1046398313</td>\n",
       "      <td>2019-08-25</td>\n",
       "      <td>15072</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23</td>\n",
       "      <td>4252514150</td>\n",
       "      <td>351125977</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>15185</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>563</td>\n",
       "      <td>922638597</td>\n",
       "      <td>935349363</td>\n",
       "      <td>2019-08-26</td>\n",
       "      <td>35485</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>849</td>\n",
       "      <td>373945924</td>\n",
       "      <td>3785537730</td>\n",
       "      <td>2019-08-05</td>\n",
       "      <td>2290</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>33</td>\n",
       "      <td>486237576</td>\n",
       "      <td>2378935119</td>\n",
       "      <td>2019-08-15</td>\n",
       "      <td>1650</td>\n",
       "      <td>A</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     transactionId   visitorId        date  revenue group\n",
       "330     3006440800  1738359350  2019-08-28      890     B\n",
       "935     1399322126  1184607010  2019-08-27     7390     A\n",
       "338     2714235110  1046398313  2019-08-25    15072     A\n",
       "23      4252514150   351125977  2019-08-15    15185     B\n",
       "563      922638597   935349363  2019-08-26    35485     B\n",
       "849      373945924  3785537730  2019-08-05     2290     B\n",
       "33       486237576  2378935119  2019-08-15     1650     A"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "orders.sample(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6\" ><caption>Without random_state</caption><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >transactionId</th>        <th class=\"col_heading level0 col1\" >visitorId</th>        <th class=\"col_heading level0 col2\" >date</th>        <th class=\"col_heading level0 col3\" >revenue</th>        <th class=\"col_heading level0 col4\" >group</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                        <th id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6level0_row0\" class=\"row_heading level0 row0\" >413</th>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row0_col0\" class=\"data row0 col0\" >947776467</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row0_col1\" class=\"data row0 col1\" >659580242</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row0_col2\" class=\"data row0 col2\" >2019-08-06</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row0_col3\" class=\"data row0 col3\" >4500</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row0_col4\" class=\"data row0 col4\" >B</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6level0_row1\" class=\"row_heading level0 row1\" >782</th>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row1_col0\" class=\"data row1 col0\" >2339954598</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row1_col1\" class=\"data row1 col1\" >1668030113</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row1_col2\" class=\"data row1 col2\" >2019-08-27</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row1_col3\" class=\"data row1 col3\" >2600</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row1_col4\" class=\"data row1 col4\" >A</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6level0_row2\" class=\"row_heading level0 row2\" >10</th>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row2_col0\" class=\"data row2 col0\" >3649131742</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row2_col1\" class=\"data row2 col1\" >879864040</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row2_col2\" class=\"data row2 col2\" >2019-08-15</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row2_col3\" class=\"data row2 col3\" >4008</td>\n",
       "                        <td id=\"T_6f836914_ad4f_11eb_a370_02420a39dee6row2_col4\" class=\"data row2 col4\" >A</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f477e48db90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6\" ><caption>With random_state</caption><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >transactionId</th>        <th class=\"col_heading level0 col1\" >visitorId</th>        <th class=\"col_heading level0 col2\" >date</th>        <th class=\"col_heading level0 col3\" >revenue</th>        <th class=\"col_heading level0 col4\" >group</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                        <th id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row0_col0\" class=\"data row0 col0\" >2472751116</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row0_col1\" class=\"data row0 col1\" >2328791559</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row0_col2\" class=\"data row0 col2\" >2019-08-07</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row0_col3\" class=\"data row0 col3\" >2070</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row0_col4\" class=\"data row0 col4\" >B</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row1_col0\" class=\"data row1 col0\" >2472751116</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row1_col1\" class=\"data row1 col1\" >2328791559</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row1_col2\" class=\"data row1 col2\" >2019-08-07</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row1_col3\" class=\"data row1 col3\" >2070</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row1_col4\" class=\"data row1 col4\" >B</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row2_col0\" class=\"data row2 col0\" >2472751116</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row2_col1\" class=\"data row2 col1\" >2328791559</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row2_col2\" class=\"data row2 col2\" >2019-08-07</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row2_col3\" class=\"data row2 col3\" >2070</td>\n",
       "                        <td id=\"T_6f859ed2_ad4f_11eb_a370_02420a39dee6row2_col4\" class=\"data row2 col4\" >B</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f477de1df90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "display(pd.concat([orders.sample(1) for _ in range(3)])\\\n",
    "    .style\\\n",
    "    .set_caption('Without random_state'))\n",
    "\t\n",
    "display(pd.concat([orders.sample(1, random_state=0) for _ in range(3)])\\\n",
    "    .reset_index(drop=True)\\\n",
    "    .style\\\n",
    "    .set_caption('With random_state'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 62 entries, 0 to 61\n",
      "Data columns (total 3 columns):\n",
      "date        62 non-null object\n",
      "group       62 non-null object\n",
      "visitors    62 non-null int64\n",
      "dtypes: int64(1), object(2)\n",
      "memory usage: 1.6+ KB\n"
     ]
    }
   ],
   "source": [
    "visitors=pd.read_csv('/datasets/visitors.csv')\n",
    "visitors.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>group</th>\n",
       "      <th>visitors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>56</td>\n",
       "      <td>2019-08-26</td>\n",
       "      <td>B</td>\n",
       "      <td>676</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19</td>\n",
       "      <td>2019-08-20</td>\n",
       "      <td>A</td>\n",
       "      <td>575</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>2019-08-06</td>\n",
       "      <td>A</td>\n",
       "      <td>667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>A</td>\n",
       "      <td>719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>26</td>\n",
       "      <td>2019-08-27</td>\n",
       "      <td>A</td>\n",
       "      <td>711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>61</td>\n",
       "      <td>2019-08-31</td>\n",
       "      <td>B</td>\n",
       "      <td>718</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>52</td>\n",
       "      <td>2019-08-22</td>\n",
       "      <td>B</td>\n",
       "      <td>650</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          date group  visitors\n",
       "56  2019-08-26     B       676\n",
       "19  2019-08-20     A       575\n",
       "5   2019-08-06     A       667\n",
       "0   2019-08-01     A       719\n",
       "26  2019-08-27     A       711\n",
       "61  2019-08-31     B       718\n",
       "52  2019-08-22     B       650"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "visitors.sample(7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Всего 58 пользователей, которые попали в обе группы\n"
     ]
    }
   ],
   "source": [
    "visitorsA = orders[orders['group'] == 'A']['visitorId']\n",
    "visitorsB = orders[orders['group'] == 'B']['visitorId']\n",
    "visitorsDup = pd.Series(np.intersect1d(visitorsA, visitorsB))\n",
    "print('Всего {} пользователей, которые попали в обе группы'.format(len(visitorsDup)))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# приводим даты в тип дат\n",
    "\n",
    "orders['date'] = orders['date'].astype('datetime64[ns]')\n",
    "visitors['date'] = visitors['date'].astype('datetime64[ns]')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### График кумулятивной выручки по группам (Gráfico de ingresos acumulados por grupos)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        date group  orders  buyers  revenue  visitors\n",
      "0 2019-08-01     A      24      20   148579       719\n",
      "1 2019-08-01     B      21      20   101217       713\n",
      "2 2019-08-02     A      44      38   242401      1338\n",
      "3 2019-08-02     B      45      43   266748      1294\n",
      "4 2019-08-03     A      68      62   354874      1845\n"
     ]
    }
   ],
   "source": [
    "datesGroups = orders[['date','group']].drop_duplicates()\n",
    "ordersAggregated = datesGroups.apply(lambda x: orders[np.logical_and(orders['date'] <= x['date'], orders['group'] == x['group'])]\\\n",
    ".agg({'date' : 'max', 'group' : 'max', 'transactionId' : pd.Series.nunique, 'visitorId' : pd.Series.nunique, 'revenue' : 'sum'}), axis=1).sort_values(by=['date','group'])\n",
    "visitorsAggregated = datesGroups.apply(lambda x: visitors[np.logical_and(visitors['date'] <= x['date'], visitors['group'] == x['group'])].agg({'date' : 'max', 'group' : 'max', 'visitors' : 'sum'}), axis=1).sort_values(by=['date','group'])\n",
    "# создаем массив уникальных пар значений дат и групп теста\n",
    "datesGroups = orders[['date','group']].drop_duplicates()\n",
    "\n",
    "# получаем агрегированные кумулятивные по дням данные о заказах \n",
    "ordersAggregated = datesGroups.apply(lambda x: orders[np.logical_and(orders['date'] <= x['date'], orders['group'] == x['group'])].agg({'date' : 'max', 'group' : 'max', 'transactionId' : pd.Series.nunique, 'visitorId' : pd.Series.nunique, 'revenue' : 'sum'}), axis=1).sort_values(by=['date','group'])\n",
    "\n",
    "# получаем агрегированные кумулятивные по дням данные о посетителях интернет-магазина \n",
    "visitorsAggregated = datesGroups.apply(lambda x: visitors[np.logical_and(visitors['date'] <= x['date'], visitors['group'] == x['group'])].agg({'date' : 'max', 'group' : 'max', 'visitors' : 'sum'}), axis=1).sort_values(by=['date','group'])\n",
    "\n",
    "# объединяем кумулятивные данные в одной таблице и присваиваем ее столбцам понятные названия\n",
    "cumulativeData = ordersAggregated.merge(visitorsAggregated, left_on=['date', 'group'], right_on=['date', 'group'])\n",
    "cumulativeData.columns = ['date', 'group', 'orders', 'buyers', 'revenue', 'visitors']\n",
    "\n",
    "print(cumulativeData.head(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "график кумулятивной выручки по дням и группам A/B-тестирования\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f47ed681f10>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAoMAAAEvCAYAAAA+WMuGAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjAsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+17YcXAAAgAElEQVR4nOzdd3zV1f3H8dfJIoHskASySICwN2G5QBREq0WrxdG6arXLatevapettv3Z8Wt/9md/tlat2J8FrbVKq4jKcoFs2SNhZBCyJ9n3nt8f3y8SrUqCJN8k9/18PO7jJud+7z2f0BTenvM95xhrLSIiIiISmIK8LkBEREREvKMwKCIiIhLAFAZFREREApjCoIiIiEgAUxgUERERCWAKgyIiIiIBLMTrArrLwIEDbWZmptdliIiIiJzS5s2by621id3RV8CEwczMTDZt2uR1GSIiIiKnZIw50l19aZpYREREJIApDIqIiIgEMIVBERERkQDWoXsGjTGxwKPAOMACXwD2AU8DmcBhYJG1tsoYY4AHgUuABuAma+0W93NuBH7gfuxPrbWL3fapwBNABPAScKe11hpj4jvbR2e0trZSWFhIU1NTZ9/arcLDw0lLSyM0NNTrUkRERKSP6egCkgeBl621VxljwoD+wPeAldbaB4wxdwN3A3cBFwPZ7mMG8DAwww129wI5OIFyszFmmbW2yr3mVuAdnDC4AFjufmaH++jsD19YWEhUVBSZmZk4+bLnsdZSUVFBYWEhWVlZXpcjIiIifcwpp4mNMTHAecBjANbaFmttNbAQWOxethi43P16IfCkdawHYo0xg4GLgFettZVuAHwVWOC+Fm2tXW+ttcCTH/iszvTRKU1NTSQkJPTYIAhgjCEhIaHHj16KiIhI79SRewazgDLgz8aYrcaYR40xA4Bka22xe80xINn9OhUoaPf+Qrft49oLP6Sd0+jjfYwxtxljNhljNpWVlX3oD9eTg+AJvaFGERER6Z06EgZDgCnAw9baycBxnOna97gjevbMl/fJ+rDWPmKtzbHW5iQmdsu+jafl+eefxxjD3r17vS5FREREAkxHwmAhUGitfcf9/lmccFhyYmrWfS51Xy8C0tu9P81t+7j2tA9p5zT66JWWLFnCOeecw5IlS7wuRURERALMKcOgtfYYUGCMGek2XQDsBpYBN7ptNwIvuF8vA24wjplAjTvVuwKYb4yJM8bEAfOBFe5rtcaYme4q4Rs+8Fmd6aPXqa+v58033+Sxxx5j6dKlXpcjIiIiH6WxGrYtgdK+NZPX0dXEXweeclcSHwRuxgmSzxhjbgGOAIvca1/C2fIlF2fbl5sBrLWVxpj7gY3udfdZayvdr7/Kya1llrsPgAc600dv9MILL7BgwQJGjBhBQkICmzdvZurUqV6XJSIiIgBNNbBvOez6B+StAl8LzL4bku7xurIzpkNh0Fq7DWdLmA+64EOutcDXPuJzHgce/5D2TTh7GH6wvaKzfZyun/xzF7uP1p7Jj2RMSjT3Xjb2Y69ZsmQJd955JwDXXHMNS5YsURgUERHxUlNtuwC40gmA0Wkw/TYYewWk9q1/pzs6MihdoLKyklWrVrFjxw6MMfh8Powx/OpXv9IKYhERke7UXAf7XnYCYO5r4GuG6FSYduvJABjUNw9uUxh0nWoErys8++yzXH/99fzxj398r2327Nm88cYbnHfeed1ej4iISEBproP9K5wAeOBVJwBGpcC0W2DM5ZA2rc8GwPYUBj20ZMkS7rrrrve1XXnllSxZskRhUEREpCs018P+diOAbU0QNRhybnZGANOmB0QAbE9h0EOrV6/+t7Y77rjDg0pERET6uPIDsOYB2PsvJwBGDoIpNzoBMH1GwAXA9hQGRUREpO+qOwZrfwGbF0NoBEy+3gmAGTMhKNjr6noEhUERERHpe5rr4K3fwbqHnNXAOV+A2d+FyCSvK+txFAZFRESk72hrgc1POKOBDeXOKODcH0LCMK8r67EUBkVERKT38/th9z9g5f1QdQgyz4V5P+lzewJ2BYVBERER6d0OroVXfwTF2yBpLHzuWRh+IWjP3g5RGBQREZHe6dgOeO3HzhYx0Wlw+R9gwiItDOkkhUGPBQcHM378eKy1BAcH89BDD3HWWWd5XZaIiEjPVZ0Pq34G25+G8BiYd79zVFxouNeV9UoKgx6LiIhg27ZtAKxYsYJ77rmHtWvXelyViIhID9RQCW/8F2x4BDBw9h1wzjchIs7ryno1hcEepLa2lrg4/UKLiIi8T1szrH8Y3vgNNNfCpM/B+fdATJrXlfUJCoMea2xsZNKkSTQ1NVFcXMyqVau8LklERKRnsNY5Om7F96DyIGRfBBf+GJLHeF1Zn6IweMLyu50bUc+kQePh4gc+9pL208Tr1q3jhhtuYOfOnRitgBIRkUBWth9evhvyVsLAkfD5vzsrhOWMUxjsQWbNmkV5eTllZWUkJWmHdBERCUCN1bD2l7DhjxA6AC76T5h+KwSHel1Zn6UweMIpRvC6w969e/H5fCQkJHhdioiISPfy+2Dr/8HK+6ChAqbcABf8CAYM9LqyPk9h0GMn7hkEsNayePFigoO1P5KIiASQ/PWw/LtQ/C5kzIIFf4eUSV5XFTAUBj3m8/m8LkFERMQbNUXOySE7n4XoVLjyMRh3pU4O6WYKgyIiItK9Wpvg7f+BN3/jTA+f91045xsQNsDrygKSwqCIiIh0D2thzz/hle87p4iM/jTM/ynEDfG6soCmMCgiIiJdr2Q3vHwXHHodksbADctg6GyvqxIUBrHW9vg9/ay1XpcgIiLSOdZC+QE48pYTAHe/AP2i4JJfw9SbITjgI0iPEdD/S4SHh1NRUUFCQkKPDYTWWioqKggP1+HbIiLSg/l9ULITjrztBMAj66Ch3HktMhmmfRHm3A39472tU/5NQIfBtLQ0CgsLKSsr87qUjxUeHk5ams5fFBGRHqStBY5udYJf/jpne5jmWue12CGQPR+GnOU84odqhXAPFtBhMDQ0lKysLK/LEBER6flajkPhRmfE78hbULgJ2hqd1xJHwfirYMjZzj6BMane1iqdEtBhUERERD5G1RHY/jQceMUZBfS3gQmCQRMg52Zn1C9jlk4J6eUUBkVEROSk5npnsce7S+DwG4CBtGlw1h3OyF/6dAiP9rpKOYMUBkVERAKd3w+HX4dtS2DPMmhtcO7zm/sDmHANxKZ7XaF0IYVBERGRQFWRB9v+6kwF1xRAvxiYsAgmXueMAGrRR0BQGBQREQkkjdWw6zlnFLBwg3MP4LC5MO8nMPISCI3wukLpZgqDIiIifZ2vDQ6uhm1Pwd6XwNcMiaNh3n0wfhFED/a6QvGQwqCIiEhfVZEHm/8M25+B+hKIiIepN8Gka2HwJE0DC9DBMGiMOQzUAT6gzVqbY4yJB54GMoHDwCJrbZVxjvJ4ELgEaABustZucT/nRuAH7sf+1Fq72G2fCjwBRAAvAXdaa+3p9CEiIhLwCjfBW/8Ne/4FQcGQfZETALMvgpAwr6uTHiaoE9eeb62dZK3Ncb+/G1hprc0GVrrfA1wMZLuP24CHAdxgdy8wA5gO3GuMiXPf8zBwa7v3LTidPkRERAKW3w/7XoY/XwKPXuCcB3zut+Gbu+Hav8LoyxQE5UN9kmnihcAc9+vFwBrgLrf9SWutBdYbY2KNMYPda1+11lYCGGNeBRYYY9YA0dba9W77k8DlwPLO9mGtLf4EP4+IiEjv09YCO/4Gb/8OyvZCTDoseAAmXw/9Ir2uTnqBjoZBC7xijLHAH621jwDJ7cLXMSDZ/ToVKGj33kK37ePaCz+kndPoQ2FQREQCQ1MtbH4C1j8MdUcheRx85k8w9goIDvW6OulFOhoGz7HWFhljkoBXjTF727/o3t9nz3x5n6wPY8xtONPIZGRkdEldIiIi3aq2GN75A2x6HJprIes8WPg/MOwCLQiR09KhMGitLXKfS40x/8C556/kxNSsOw1c6l5eBLTfqjzNbSvi5JTvifY1bnvah1zPafTxwbofAR4ByMnJ6dKwKiIi0qXK9jlTwe8+DdYHYxY6R8SlTvG6MunlTrmAxBgzwBgTdeJrYD6wE1gG3OhediPwgvv1MuAG45gJ1LhTvSuA+caYOHfhyHxghftarTFmprtK+IYPfFZn+hAREelb8tfDkmvh99Nhx9+drWG+vgU++4SCoJwRHRkZTAb+4eQ0QoC/WmtfNsZsBJ4xxtwCHAEWude/hLPlSy7Oti83A1hrK40x9wMb3evuO7GYBPgqJ7eWWe4+AB7oTB8iIiK9nrVQkQuH1jr7Axa84+wPOPtumH4rDBjodYXSxxhnQW7fl5OTYzdt2uR1GSIiIv+uusDZCubEo+6o0x6XBTO/CpM/B2EDvK1RupUxZnO77fy6lE4gERER6W71ZXDYDX4H10LVIae9f4KzICRrtvMcP1SLQqTLKQyKiIh0taYaOPyWO/K3Fkp3O+39omHI2TDjS074SxwNQZ05D0Lkk1MYFBEROdNajjv3+p2Y9j26FawfQsIhYyaMvwqy5sDgiRCsf4rFW/oNFBER+aQaKp3wd+QtOLIOireBvw2CQiA1B879jjPylz4dQvp5Xa3I+ygMioiIdFZtMeS/DUfedsJf6S6nPTgMUqY4+/8NOdsZBdSRcNLDKQyKiIh8HGuh8iDkr3PD39snF3yEDnBG+8ZeAUNmQepUCI3wtl6RTlIYFBERac9aZ4HHieB35G2oP+a8FhEHGWfBtC864W+Q7vmT3k+/wSIiIk01kLcaDrwKua+dDH9RKZB5Dgw5y3kMHKnVvtLnKAyKiEjgsRZKdsGBV5zwl7/eOe+3XwwMOx+GXwhZ50LsEO3zJ32ewqCIiASGplo4uAZyX4UDr5085WPQeDj7TsieD2nTNO0rAUe/8SIi0jdZC6V72o3+rXO2e+kX7Y7+zXNGAKMHe12piKcUBkVEpO9oa3GC34EVzuhfbaHTnjwOZt3ujP6lT4fgUG/rFOlBFAZFRKT3qzoCWxbDlr/A8VIIi4Jhc2D2d53Rv5hUrysU6bEUBkVEpHfy+5zVv5sed6aCjYERC2DqzTB0DoSEeV2hSK+gMCgiIr1LXQlsfRI2L4aaAohMhvP+A6bcALHpXlcn0usoDIqISM9nLRx+wxkF3PNPZyFI1myY/1MY9SndAyjyCSgMiohIz9VYBduWOCGw4gCEx8KML8PUm2BgttfVifQJCoMiItKzWAtFW2DTY7Dz79DW5Oz/d/nDzhnAOvtX5IxSGBQRkZ6h5Tjs+BtsfAyObYfQATDxGsj5Agye6HV1In2WwqCIiHirdK8zCvjuUmiuhaQxcMmvYcLVEB7tdXUifZ7CoIiIdL+2FtizzLkX8MhbEBwGYxZCzi2QMVPnAYt0I4VBERHpPtX5sOnPsPUvcLwMYofAhT+GydfDgIFeVycSkBQGRUSka/l9kLvSmQrev8IZ9cu+CKbdAsMugKAgrysUCWgKgyIi0jXqy5wRwM1/dkYEByTBud92toXR5tAiPYbCoIiInDnWQv46Z0Xw7hfA3wqZ58KFP4FRl+qIOJEeSGFQREQ+uYZKZ0/ATY9D6W7oF+NMA+d8ARJHel2diHwMhUERETk9vlbIfQ22/RX2vwy+FkiZDJ9+CMZdCWH9va5QRDpAYVBERDrOWmdD6G1LnA2iG8qh/0CY9kWYeC0MnuB1hSLSSQqDIiJyanUlsOMZJwSW7nL2BRx5MUy8DoZfAMGhXlcoIqdJYVBERD5caxPsewneXeJsDWN9kJoDn/ovGPsZ6B/vdYUicgYoDIqIyEnWQsEGJwDueg6aaiA6Fc6+05kGThzhdYUicoYpDIqICNQeha1POSGwMg9C+8Poy5wAmHUeBAV7XaGIdBGFQRGRQOdrhT/NhbpiZ0/Ac78NYz4N/aK8rkxEuoHCoIhIoCvc6ATBzzwKEz7rdTUiPUZTq49D5cfJK6snr/Q4B8vrySur56azsrhqaprX5Z0xHQ6DxphgYBNQZK291BiTBSwFEoDNwPXW2hZjTD/gSWAqUAFcba097H7GPcAtgA+4w1q7wm1fADwIBAOPWmsfcNs73YeIiHRS7kowwZA9z+tKRLqdtZby+hYn8LmhL6+snoPl9RRWNWLtyWtTYyMYlhRJZL++NZbWmZ/mTmAPEO1+/wvgt9bapcaYP+CEvIfd5ypr7XBjzDXudVcbY8YA1wBjgRTgNWPMiTuRfw/MAwqBjcaYZdba3Z3t4zT/DEREAlveSkjLgYhYrysR6TLWWg5XNLC/pO79I32l9dQ2tb13XXhoEEMHRjIpPY4rp6QxLDGSYYmRZA0cQERY37x3tkNh0BiTBnwK+BnwLWOMAeYC17mXLAZ+jBPUFrpfAzwLPORevxBYaq1tBg4ZY3KB6e51udbag25fS4GFxpg9ne3D2vb5XURETul4BRzdBnPu8boSkTOqpqGVbYXVbMuvZmtBFdsKqqluaH3v9aSofgxLjOTTk1LeC3zDkiIZHB1OUJDxsPLu19GRwf8GvgucuJs4Aai21p6I0oVAqvt1KlAAYK1tM8bUuNenAuvbfWb79xR8oH3GafZR3sGfR0REAA6uBiwMv9DrSkROW5vPz76SOrYVVLM1v5qt+VXklR0HwBjITorkojGDmJQRy5jB0QxNHEBUuDZKP+GUYdAYcylQaq3dbIyZ0/UlnTnGmNuA2wAyMjI8rkZEpAfKXQkRcZAyyetKRDqstLaJLfnVbvirYnthDY2tPgASBoQxOSOWKyanMjkjjglpMQp+p9CRkcGzgU8bYy4BwnHuGXwQiDXGhLgjd2lAkXt9EZAOFBpjQoAYnEUeJ9pPaP+eD2uvOI0+3sda+wjwCEBOTo6mkEVE2rPWuV9w6PnaR1B6NGst/9xezIpdx9iWX01RdSMAocGGMSkxXD0tnckZsUxOjyM9PgLn7jTpqFOGQWvtPcA9AO7I4HestZ8zxvwNuApnte+NwAvuW5a5369zX19lrbXGmGXAX40xv8FZQJINbAAMkO2uHC7CWWRynfue1Z3p45P8QYiIBJySnVBf4pwtLNJDNbf5uPeFXSzdWEBKTDhThsTxhXOymOxO+YaH6j9kPqlPsjb6LmCpMeanwFbgMbf9MeAv7gKRSpxwh7V2lzHmGWA30AZ8zVrrAzDG3A6swNla5nFr7a7T6UNERDohd6XzPGyut3WIfITS2ia+/H+b2ZJfze3nD+eb80YQHGCLO7qDCZQBtZycHLtp0yavyxAR6TkWXwbHy+Gr67yuROTfbM2v4sv/t5naxjb+a9FELhk/2OuSupUxZrO1Nqc7+grqjk5ERKSHaTkO+es1Kig90t82FXD1H9cTFhLEc189K+CCYHfrW1toi4hIxxx+E3wt2lJGepRWn5+fvbiHJ94+zNnDE3jo2inEDQjzuqw+T2FQRCQQ5a6EkAjImOV1JSIAVNQ387W/bmH9wUpuOSeLey4eRUiwJjC7g8KgiEggyn0NMs+B0HCvKxFh19EabntyM2X1zfxm0UQ+MyXN65ICiiK3iEigqToMlXnaUkZ6hGXvHuXKh9/Gby3PfnmWgqAHNDIoIhJo3ttSRmFQvOPzW365Yi9/XHuQaZlx/O/nppIY1c/rsgKSwqCISKDJWwUx6TAw2+tKJEDVNLTy9aVbeX1/GZ+bkcG9l40lLESTlV5RGBQRCSS+Vji4FsZ9BnRkl3hgf0kdtz25iaLqRn5+xXium5HhdUkBT2FQRCSQFG6EljrdLyieWLHrGN96ehsRYSEsuXUmOZnxXpckKAyKiASW3JVggiFrtteVSADx+y0PrjzAgysPMDEthj9cP5XBMRFelyUuhUERkUCS+xqkTYOIWK8rkT6uqdXH5iNVrMurYO3+MnYU1XDllDR+dsU4wkODvS5P2lEYFBEJFMfLofhdOP97XlcifVBzm49t+dWsO1jBurwKtuZX0+LzExxkGJ8aw8+vGM+109Mxule1x1EYFBEJFHmrAastZeSMaPX52V5Yzbq8CtYdrGDzkSqaWv0YA2NTornxrCGcNWwgOZlxRIWHel2ufAyFQRGRQJG3EiLiIGWS15VIL9Tm87PraO17I38bD1fS0OIDYNSgKK6dnsGsoQnMyEogpr/CX2+iMCgiEgisdfYXHHo+BOl+Lem4V3eXsHRDPhsOVVLX3AbA8KRIrpySxlnDEpgxNIH4AWEeVymfhMKgiEggKNkJ9SXaUkY6rKGljfv/tZslGwpIi4vg0okpzBqWwMyh8SRF6UzrvkRhUEQkELx3BN1cb+uQXmHX0RruWLKVg+XH+cqcYXxr3ghCg3VCSF+lMCgiEghyX4OksRCd4nUl0oNZa3n8rcP8Yvle4gaE8tQtMzhr+ECvy5IupjAoItLXNddD/nqY+WWvK5EerKyumf949l3W7CvjwtHJ/PKqCboXMEAoDIqI9HWH3wR/q7aUkY+0dn8Z337mXeqaWrl/4Vg+P3OI9gMMIAqDIiJ9Xd5KCImAjFleVyI9THObj1+9vI9H3zzEyOQonvriDEYOivK6LOlmCoMiIn1d7krIPAdCtQJUTsorq+eOJVvZdbSWG2YN4XuXjNYxcQFKYVBEpC+rOgyVeTD9Vq8rkR7CWsszmwr48bLdhIcG8acbcpg3JtnrssRDCoMiIn3Ze1vK6H5BgZrGVr73jx28uL2Ys4Yl8JtFkxgUoxHjQKcwKCLSl+WtgpgMGJjtdSXisY2HK/nG0m2U1DZx14JRfOm8oQQFaZGIKAyKiPRdvlY4uBbGXwlaGRqw2nx+Hlqdy+9WHiA9vj/PfuUsJqXHel2W9CAKgyIifVXBBmip0xRxAMstreOe53aw8XAVn5mSyn0LxxHZT//0y/vpN0JEpK/KWwkmGIbO9roS6UZNrT5e2lHM0g0FbDhcSWS/EB68ZhILJ6V6XZr0UAqDIiJ9Ve5KSJsG4TFeVyLdYO+xWpZuKOC5LYXUNrWRmdCfuy8exVVT0xgY2c/r8qQHUxgUEemLjpdD8btw/ve8rkS60PHmNv61/ShLNhSwraCasOAgFowbxDXT05k1NEGniEiHKAyKiPRFeasBq/sF+6gdhTUs2ZjPsm1HqW9uY3hSJD/41Gg+MyVN5wlLpykMioj0RXkrISIOUiZ5XYmcIXVNrbyw7ShLN+azs6iWfiFBXDohhWunpzN1SJxGAeW0KQyKiPQ1fr9zv+CwuRCk48V6M2stWwuqWfJOPv/aXkxjq49Rg6K4b+FYFk5KJSYi1OsSpQ84ZRg0xoQDrwP93Ouftdbea4zJApYCCcBm4HprbYsxph/wJDAVqACuttYedj/rHuAWwAfcYa1d4bYvAB4EgoFHrbUPuO2d7kNEJOCV7ITjpZoi7oUaWto4UFLPvpI69h+r440D5ewrqaN/WDALJ6VwzfQMJqbFaBRQzqiOjAw2A3OttfXGmFDgTWPMcuBbwG+ttUuNMX/ACXkPu89V1trhxphrgF8AVxtjxgDXAGOBFOA1Y8wIt4/fA/OAQmCjMWaZtXa3+94O93EG/jxERHq/vBNH0M31tg75SK0+P4fKj7PvWJ3zKKljf0kd+ZUNWOtc0y8kiHGpMfz8ivF8elKK9geULnPK3yxrrQXq3W9D3YcF5gLXue2LgR/jBLWF7tcAzwIPGec/YRYCS621zcAhY0wuMN29LtdaexDAGLMUWGiM2dPZPtxaRUQCW+5KSBoL0YO9riTg+f2WwqrG98LeifB3sLyeVp/zT1ZwkCFr4ADGpcRw5ZQ0RiRHMXJQFBnx/QnWcXHSDTr0nxnGmGCcadrhOKN4eUC1tbbNvaQQOLGbZSpQAGCtbTPG1OBM86YC69t9bPv3FHygfYb7ns72Ud6Rn0dEpM9qrof89TDzy15XEpCstew6WsvLO4/xRm45B0rqaGjxvfd6WlwEI5OjmDs6iZFu6BuaOIB+Ibq3U7zToTBorfUBk4wxscA/gFFdWtUZYoy5DbgNICMjw+NqRES6weE3wd+q+wW7kd9v2ZJfxcs7j/HyrmMUVjUSZGDqkDgW5aQzalAUIwZFkZ0USVS4FnxIz9OpGxCstdXGmNXALCDWGBPijtylAUXuZUVAOlBojAkBYnAWeZxoP6H9ez6sveI0+vhgvY8AjwDk5ORoCllE+r68lRASARmzvK6kT2v1+XnnYCXLdxbzyu4SyuqaCQsO4pzsgdwxN5sLxyRrvz/pNTqymjgRaHWDYATOQo9fAKuBq3BW+94IvOC+ZZn7/Tr39VXWWmuMWQb81RjzG5wFJNnABsAA2e7K4SKcRSbXue/pVB+f6E9CRKQvyH0NMs+B0HCvK+lzmlp9vHmgnOU7j/HanhJqGluJCA3m/FGJXDR2EOePSiJaI3/SC3VkZHAwsNi9bzAIeMZa+y9jzG5gqTHmp8BW4DH3+seAv7gLRCpxwh3W2l3GmGeA3UAb8DV3+hljzO3ACpytZR631u5yP+uuzvQhIhLQKg9B5UGY/iWvK+kz6pvbWL23lJd3HWPN3lKOt/iICg9h3uhkLho3iNkjEgkP1f1+0ruZQBlQy8nJsZs2bfK6DBGRrrPxUXjx23D7JhiY7XU1vVZFfTOr9payYtcxXj9QTkubn4GRYcwbM4iLxw1i5tAEwkKCvC5T+jhjzGZrbU539KVNi0RE+orcVRCTAQnDva6kV7HWsvdYHav2lrJyTwlbC6qxFlJjI/j8jCEsGDeIqUPitM2L9FkKgyIifYGvFQ69DuOvBJ1OcUpNrT7ezitn1d5SVu0p5WhNEwAT02K484JsLhiVzLjUaJ30IQFBYVBEpC8o2AAtddpS5mMU1zS+F/7eyiunqdVP/7Bgzs0eyDcuHMGcUYkkRWnhjQQehUERkb4gbyWYYBg62+tKegy/3/JuYbU7/VvK7uJaANLjI7hmWgZzRyUxY2i8NnyWgKcwKCLSF+S+BmnTIDzG60o8VdvUylsHylm5t5Q1+0opr28hOMgwdUgc91w8igtGJzEsMVLTvyLtKAyKiPR29WVQ/C6c/wOvK+l2J45/W7u/jLX7yticX4XPb4mJCGXOyETmjkpi9ohEYvtrA2iRj6IwKCLS2x1c7TwPn+ttHRUZE6gAACAASURBVN2kpqGV1w+UOQFwfxlldc0AjEuN5suzhzJnZBKT02MJCdb2LyIdoTAoItJbWQt1xbDreYiIh8GTvK6oS/j9lp1Ha1izzwl/W/Or8FuI7R/KudmJzB6RyHkjBmrxh8hpUhgUEenprIXaIijbC6V7neeyfc6juca5ZuK1ENR3FkJUHm/hjQNlrNlXxuv7y6g43oIxMCE1htvnZjN7RCKT0mO195/IGaAwKCLSU1gLNQVu0PtA8GupO3ld/4GQOAomfNZ5ThzpLB7p5Y7VNPH0xgJW7Stle6Gz8XP8gDDOyx7InJFJnJs9kITIfl6XKdLnKAyKiHihuR6ObYejW6FkF5TugfL90FJ/8poBSU7Qm3gNJI1yg98oGDDQu7q7wLsF1Tz+1iFe3F6Mz1omp8fyjQtGMGdkIuNTYwjS6J9Il1IYFBHpaq2NcGynE/yOboWjW5zRPtyz4SOTnZA36XPvD3394z0tuyu1+fys2FXC428dYvORKiL7hXDjWZncdFYm6fH9vS5PJKAoDIqInEltLVC62wl8J8Jf6R7wtzmvD0iElCkw5nJIneIs+ohK9rbmblTT2MrTG/NZ/PYRiqobyYjvz48uHcNnc9KICg/1ujyRgKQwKCJyuvw+556+E6GvaAuU7ARfi/N6eCykTIaz73SeUyZDdGpAnh18qPw4T7x1iL9tLqShxceMrHjuvWwMF4xO1iIQEY8pDIqIdFZDJWx5EjY+6iz4AAiLgpRJMONLzshfymSIywzI4HeCtZZ1eRU89uYhVu0rJTQoiMsmpnDz2ZmMSw3sk1JEehKFQRGRjirdA+/8Ed5dCm2NkHkuzLnHWcmbMByCtMkxQFOrj2XvHuXxNw+x91gdCQPC+PrcbD4/M0N7AYr0QAqDIiIfx++HAyvgnT/AwTUQ3A8mLHJGAAeN97q6HqW0ton/eyefp9YfoeJ4C6MGRfHLqybw6YkphIf2nT0QRfoahUERkQ/TVAvbnnJGAqsOQVQKXPAjmHITDEjwujrPldc3s+toLTuLath1tIadRbXkVzZgDFwwKokvnJ3FrGEJmACeJhfpLRQGRUTaq8hzAuC2p5w9/9JnwAU/hNGfhuDAW+1qraWktpmdRTXsdEPfrqM1FNc0vXfNkIT+jE+N4epp6Vw8bhBDEyM9rFhEOkthUETEWshb5UwFH3gFgkJh3JXOVHDqFK+r6zbWWgoqG52RvnbBr7zeWR1tDAxLjGRGVjzjUmMYmxLDmJRoYiICLySL9CUKgyISuFqOw7tL4J1HoHyfc+LH7Lsh5wsBs/eftZZ3DlXy6BsH2XCoktomZz/EkCBDdnIU549MYlxqDONSoxk9OJr+YfpnQ6Sv0f+rRSQwbfgTrLofmmqcjZ+v+COMvQJCAuPsW2stq/eV8vvVeWw+UsXAyH5cOjGF8akxjEuJITs5Uos+RAKEwqCIBBa/D16+Bzb8EYbNdUYC06cHzH6APr9l+c5ifr86jz3FtaTGRnDfwrEsyklX+BMJUAqDIhI4muvh77fA/pdh1u0w7z4ICowA1NLm5/mtRTy8No9D5ccZmjiAX392IgsnpRAarP0RRQKZwqCIBIbaYvjrIue4uE/9F0z7otcVdYvGFh9Pb8znkdcPcrSmibEp0fzv56Zw0dhBOgZORACFQREJBMd2OkGwqQaufRpGzPe6oi5X29TKX9Yd4fE3D1FxvIVpmXH8/DPjmT0iUXv/icj7KAyKSN+W+xo8cxP0i4Kbl8PgCV5X1KUq6pv581uHWbzuMHVNbcwekcjXzh/O9Kx4r0sTkR5KYVBE+q5Nj8OL34GkMXDd0xCT6nVFXaa4ppFHXj/Ikg35NLf5WTB2EF87fzjjUmO8Lk1EejiFQRHpe/x+eO1eePt3kD0frnrcGRnsI06cCrKnuJbdxc6RcK/tKcFv4fJJqXxlzlCGJ/Wdn1dEupbCoIj0La2N8NxtsGeZs0hkwS8guPf+VdfU6iO3tJ7dxbXsLa5jT3Ete4/VUtXQ+t41qbERXDs9g1vPHUp6fH8PqxWR3qj3/g0pIvJB9WWw5Boo2gzzfwazvtZr9g+01lJa54z27XFD357iWg6WH8fntwCEhwYxclA0F40dxOjB0YwaFMWowToOTkQ+GYVBEekbyvbBU5+F+lK4+i8w+jKvK/pQNY2tFFQ2UFjVSGFVAwWVDeSW1bOnuI7K4y3vXZcaG8HowVEng9/gKDITBmg7GBE54xQGRaT3O/Q6PP15CA6Dm16EtKmeldLQ0tYu6DVSUNlAQZUT/goqG947+/eEqH4hDE0cwPwxyYwaFOUGP432iUj3URgUkd5t219h2R2QMAyuewbihnRLt6W1Taw/VMme4tr3jfSV17e877rw0CDS4vqTHhfB1CFxpMf1Jy0ugvT4/qTH9Semv0KfiHjrlGHQGJMOPAkkAxZ4xFr7oDEmHngayAQOA4ustVXG2c30QeASoAG4yVq7xf2sG4EfuB/9U2vtYrd9KvAEEAG8BNxprbWn04eIBAhrYc1/wtpfQNZsWPQkRMR2WXeldU28c7CSdQcrWH+wgoNlxwEIDTakxEaQHtefeWOSSftA2BsYGaZNnkWkR+vIyGAb8G1r7RZjTBSw2RjzKnATsNJa+4Ax5m7gbuAu4GIg233MAB4GZrjB7l4gBydUbjbGLLPWVrnX3Aq8gxMGFwDL3c/scB+f9A9DRHqJ1ib45x2w/WmY9Hm49LcQEnZGuyira+adQ07wW5dXQZ4b/iL7hTA9K55rpqUzc2gCYwZHE6KzfUWkFztlGLTWFgPF7td1xpg9QCqwEJjjXrYYWIMT1BYCT1prLbDeGBNrjBnsXvuqtbYSwA2UC4wxa4Boa+16t/1J4HKcMNipPtxaRaSvqitxNpLe9DgcL4W5P4Rzv31GVgyX1zfzzsFK1rsjfwdK6wEYEBbMtKx4FuU44W9sisKfiPQtnbpn0BiTCUzGGcFLbhe+juFMI4MTFAvava3Qbfu49sIPaec0+lAYFOmLirbAO3+Anc+BvxWyL4Kzboes8077I8vqmtl0+OS07/4SJ/z1DwtmWmY8n5mSxqxhCYxT+BORPq7DYdAYEwn8HfiGtba2/T0w7v19tgvq+0R9GGNuA24DyMjI6JK6RKSL+FqdjaPX/wEKN0BYJOR8AWZ8yVks0gmtPj97imvZcqSKrQXVbMmvoqCyEYCI0GByMuO4fHIqM4cmMD41hlCFPxEJIB0Kg8aYUJwg+JS19jm3ueTE1Kw7DVzqthcB6e3enua2FXFyyvdE+xq3Pe1Drj+dPt7HWvsI8AhATk5Ol4ZVETlDjlfAlidgw6NQdxTismDBAzDpcxAe3aGPKK1rYmu+E/q2Hqlme1E1Ta1+AJKj+zElI47rZw5h6pA4JqTFKvyJSEDryGpiAzwG7LHW/qbdS8uAG4EH3OcX2rXfboxZirOoo8YNcyuAnxtj4tzr5gP3WGsrjTG1xpiZONPPNwD/czp9dP7HF5Ee49hOZyp4x9+grQmGznEWhmTPg6Dgj3xb+1G/LW4ALKxyRv1Cgw1jUmK4dnoGUzLimDIkjpSYcK3uFRFppyMjg2cD1wM7jDHb3Lbv4QS0Z4wxtwBHgEXuay/hbPmSi7Pty80Abui7H9joXnfficUkwFc5ubXMcvdBZ/sQkV7G74N9y50QePgNCImAidfCjC9D0qh/u7yxxUdeWT15ZfXsPlrLlvwqthfW0Nz2/lG/G2dlMmVILGNTYggP/eggKSIiYJwFuX1fTk6O3bRpk9dliAhAYzVs/QtseASq8yEmHabfCpOvh/7x1Da1klta/77HgdI6CqsaOfFXVmiwYWxKDFMy4picEatRPxHpU4wxm621Od3Rl04gEZHu0VAJB16FfS85z63HaU2bxaGJd7Gx3ywOlDeR+9cDHCito6S2+b23hQUHMTRxABPTYrlyShrZSVEMT4okc2B/+oVo1E9E5JNSGBSRrmEtlB+A/cth38tQsB6sn+bwRF4PPY/H2s5nfW6ac7MHexkQFszwpEjOHj7wvcA3PCmS9LgIbe0iItKFFAZF5MzxtUL+Oif87V8OlQed9kHjaZz5TX5flM3v90eSlRjFjPHxzHNDX3ZSJIM1xSsi4gmFQRH5ZBqrIHelM/2b+xo01UBwmLMh9KyvwYgFLM8P5ocv7KSmsZVvzsvmK3OGaTsXEZEeQmFQRDqvIs9ZBbz/ZTjyNlgfDEiEUZfByAUw9HzoF0lFfTM/WraLF7cXMy41mr/cMoPRgzu2V6CIiHQPhUER6ZjyXNjxDOz6B5Tvd9qSxsA534ARF0PqVAg6Odr34vZifvjCTuqaWvmPi0Zy23lDNRooItIDKQyKyEerK4Fdz8H2Z+DoFsBA5jkw7YswYgHEDfm3t5TXN/OjF3by0o5jTEiL4VdXzWTkoKjur11ERDpEYVBE3q+5Dvb8yxkFPLgGrB8GTYD5P4VxV0J0yoe+zVrLv7YX86MXdnK82cd3F4zktnOHaiWwiEgPpzAoIs4q4NyVTgDc+xK0NUJsBpzzLZiwCBJHfuzbS+ua+OHzO1mxq4SJ6bH8+qoJZCdrNFBEpDdQGBQJVNZCwTvOFPCuf0BjJUTEw6TrnACYPgNOsdWLtZZl7x7l3mW7aGjxcc/Fo7jlnCyNBoqI9CIKgyKBpmyfEwB3/A2qjzjnAY+6BMYvgmFzISSsQx9TWtvE95/fyau7S5icEcuvrprI8KTILi5eRETONIVBkb7IWqgvgarDUHnIea46DCU7nYcJgqFzYM49MPpS6NfxKV1rLc9vK+LHy3bT1OrjB58azc1nZxEcpA2jRUR6I4VBkd6qtckZ2TsR9NqHvqrDzn1/7zEQkwbxQ2HBAzD2MxCV3Okui2sa+eHzO3ltTyk5Q+L45VUTGJqo0UARkd5MYVCkp/O1Odu6HH7D2ez5ROirO/r+60IHQHwWJAyD4RdAXCbEZTltMekdnv790BL8lr+sO8yvX9lPm9/PDy8dw01nZWo0UESkD1AYFOmJKg9C3mrIWwWH3oDmGqc9arAT8IbOcUJeXObJ0Ddg4CkXfJyOXUdr+N5zO3i3sIbZIxL56eXjSI/vf8b7ERERbygMivQEjVVw6PWTAbD6iNMekw5jFzrHuw2dA/3ju62khpY2/vu1Azz25iHi+ofxu2snc9mEwZguCJwiIuIdhUERL/haoXDjyfB3dIuzuXNYJGSdB7Nud1b2JgzrktG+U1m9t5QfPL+ToupGrp2ewd0LRhHTP7Tb6xARka6nMCjSHayFilwn+OWtdu7/a6l3VvWmToXz/sMZ/UvLgWDvQldpbRM/+eduXtxRTHZSJH/78iymZXbfaKSIiHQ/hUGRrlR3DLb8Bbb+5eTUb1yms6nz0POdUcCIWE9LBPD7LU9tyOeXy/fS7PPznfkjuO28YYSFaPNoEZG+TmFQ5Ezz++HQGtj0Z9j3EvjbnNB3zjecABif5XWF77P3WC33PLeDrfnVnD08gZ9dPp7MgQO8LktERLqJwqDImXK8HLb+H2x+AqoOOUe7zfwKTL3Zufevh2ls8fG7VQf40+sHiY4I5TeLJnLF5FQtEBERCTAKgyKfhLVw5C1nFHDPMvC1QMZZcP73YfRlEBrudYUfau3+Mn7w/A4KKhtZlJPGPRePJm7A6e9DKCIivZfCoMjpaKiEd5fC5j9D+X7oFwM5X4CpN0HSaK+r+0hldc3c/6/dLHv3KEMTB7D0tpnMHJrgdVkiIuIhhUGRjrLW2Q5m059h13PQ1gSpObDwf2HsFRDWszZittZSWNXIzqIadh6tYWdRLZuPVNHS5ucbF2bzlTnD6BcS7HWZIiLiMYVBkVNpqoUdzzghsGSnsxfgpOucewEHT/C6OsA5Lu5Q+XF2Ha1h19FaJwAW1VDb1AZASJAhOzmKT40fzK3nDWV4ks4TFhERh8KgyEdpbYINj8Drv3aOgxs0AS79bxh/FfSL8q4sn5/c0np2Fp0MfruLa2lo8QEQFhLE6EFRXDoxhXEpMYxLjWZEchThoRoFFBGRf6cwKPJB1sLOv8PKn0B1PmTPh9l3OZtDe7TSNr+igcffOsTW/Cr2HKujpc0PQP+wYMYMjmZRTjpjU6IZlxrD8KRIQoO1P6CIiHSMwqBIe0fWwSvfh6LNkDwOrn8ehp3vWTmldU08tCqXJRvyCTKGKRlx3DhrCONSYxibEkPWwAEEB2krGBEROX0KgyIAFXnw2r2w558QNdhZFDLxGgjyZmq1prGVR17P4/E3D9Pi83P1tHTumJvNoJieuVWNiIj0XgqDEtgaKmHtL2HjnyC4n7M/4KyvQZg3J3A0tvhYvO4wD6/Jo6axlcsmpvCteSPI0okgIiLSRRQGJTC1NbuLQ34FzXUw5QaY8z2ISvaknFafn79tKuTBlfspqW1mzshEvjN/JONSYzypR0REAofCoAQWa509Al/7CVQfgeHzYN59kDzGk3L8fsuLO4r5r1f2cbiigalD4vjdNZOZoY2gRUSkmygMSuDIXw8rvg9Fm9zFIf+AYXM9KcVay9r9ZfxqxT52Ha1lZHIUj96QwwWjk3Q2sIiIdKtT7j9hjHncGFNqjNnZri3eGPOqMeaA+xznthtjzO+MMbnGmO3GmCnt3nOje/0BY8yN7dqnGmN2uO/5nXH/JTydPkQ+VEUePH09PH4R1BTCwt/Dl173LAhuPlLFNY+s56Y/b6SmsZXfXj2Rl+48lwvHJCsIiohIt+vIZmRPAAs+0HY3sNJamw2sdL8HuBjIdh+3AQ+DE+yAe4EZwHTg3hPhzr3m1nbvW3A6fYj8m8YqePke+P0MyF3p3BN4xxaY/HlPVgnvO1bHFxdv4sqH3yav7Dg/+fRYVn17DldMTtP2MCIi4plTThNba183xmR+oHkhMMf9ejGwBrjLbX/SWmuB9caYWGPMYPfaV621lQDGmFeBBcaYNUC0tXa92/4kcDmwvLN9WGuLO/ejS5/la4VNj8Oa/4SmGif8nf99iBrkSTm5pXX8fnUez28rIjIshO/MH8HNZ2cxoJ/u0hAREe+d7r9Gye3C1zHgxBLMVKCg3XWFbtvHtRd+SPvp9KEwGOishQOvwCs/gPL9kDUbLvo5DBrnSTnbC6v539V5rNh9jH4hQdx67lC+MnsYcQPCPKlHRETkw3zioQlrrTXG2DNRzJnuwxhzG85UMhkZGWe8LulBSnY7J4fkrYL4YXDNEhh5cbcfH2etZd3BCh5ek8cbB8qJCg/h9vOHc9NZmSRE9uvWWkRERDridMNgyYmpWXcauNRtLwLS212X5rYVcXLK90T7Grc97UOuP50+/o219hHgEYCcnJwuDazikePlsPpnsPkJ6BcFF/0nTPsihHTv6Jvfb1m5t5T/XZPL1vxqBkb24+6LR/G5GRlEhYd2ay0iIiKdcbphcBlwI/CA+/xCu/bbjTFLcRaL1LhhbgXw83aLRuYD91hrK40xtcaYmcA7wA3A/5xOH6f5c0hv1dYM7/wBXv81tByHabfCnLuhf3z3luHz86/txTy8Jo99JXWkxUVw/+Xj+OzUNMJDvTnKTkREpDNOGQaNMUtwRvUGGmMKcVYFPwA8Y4y5BTgCLHIvfwm4BMgFGoCbAdzQdz+w0b3uvhOLSYCv4qxYjsBZOLLcbe9UHxIgrHXOD371h1B1GLIvgvk/hcQR3VpGU6uPZzcX8sfX8yiobGREciS/vXoil01IISS4I4v0RUREegbjLMrt+3JycuymTZu8LkM+iaPbnE2jj7wJiaPhop/B8Au6tYT65jaeWn+ER988RFldMxPTY/nanGFcODqZIG0PIyIiZ4gxZrO1Nqc7+tLeFtLz1R2DlffDtqecaeBP/Qam3AjB3ffrW3m8hSfeOsTidUeoaWzlnOEDefDqScwalqCNokVEpFdTGJSeq7UR3n4I3vwt+FrgrK/Ded+B8Jhu6b68vpmNhyp5M7ec57YU0djq46KxyXx1znAmpsd2Sw0iIiJdTWFQeqZ9y+Gl70JNPoy+DObdB/FDu7TLo9WNbDhUyTuHKtlwqIK8suMARIQGc/H4QXxl9jCyk6O6tAYREZHupjAoPUvVEXj5btj3knNf4I3/gqxzz3g31loOVzSw4VCFG/4qKaxqBCAqPITpmfEsyklnelY841JjCNWiEBER6aMUBqVnaGuBdf8Da38FJgjm3Q8zvwLBZ2aPPr/fsr+0rt3IXyVldc0AJAwIY3pWPLeck8X0rHhGDYrWWcEiIhIwFAbFewfXwkvfcY6QG30ZLHgAYtJO/b5TKKtr5qUdxbxxoJyNhyupaWwFYHBMOGcPS2B6VgLTs+IZljhAi0BERCRgKQyKd+pKnHOEdzwDcZlw3d9gxPxP9JENLW28squE57cV8caBcnx+S2ZCfxaMHcT0rHimZ8WTFheh8CciIuJSGJTu5/fBxsdg1f3Q1gSz74JzvgmhEaf1cW0+P2/mlvPCtqOs2HWMhhYfqbERfOm8oVw+OZURWvQhIiLykRQGpXsVboYXvwnF78KwuXDJryFhWKc/xlrLjqIa/rG1iH++e5Ty+haiw0NYOCmVyyelMC0zXptAi4iIdIDCoHSPxip47Sew+QmIGgSffQLGXA6dnK7Nr2jg+W1FPL+1iIPlxwkLDmLuqCQun5zK+aMS6Rei84BFREQ6Q2FQupa18O4SeOWHTiCc9TWYczf06/jUbeXxFl7cfpTntx1l85EqAGZkxXPbeUO5eNxgYvqfmRXHIiIigUhhULpOyW548duQ/zakz3COkRs07mPfcry5jaLqRoqqGimsamDt/jLW7CujzW8ZkRzJXQtG8elJKaTGnt79hSIiIvJ+CoNy5vh9ULILCt6BI2/B7mXO0XGffggmfQ5rDDUNLRRWNVJU3eg8VzVSVN3w3vfVDa3v+8jk6H584ZwsLp+UyujBUVoFLCIicoYpDMrpazkOhZuc8Je/Dgo2QksdAM0RyRxIuZJlcTeRuz2MwrVvUFTVyPEW3/s+on9YMKmxEaTGRTAxLZbUuAjS4vqTGhtBWlwEiZH9tBBERESkCykMSsfVHYP89SfDX/F2sD7A4E8cTWHap3i9eThPFQ1mT1UsVBliIo6TGutnSMIAzho2kLQ4J+SlxvYnNS6CuP6hGu0TERHxkMKgfDi/3zkRJH/dyfBXddh5LSQcUnNomP51NvlH8reSwbxysInmAj+x/UO5YEwy3xibzKxhCUSHa3GHiIhIT6YwKCdVHoK8Vc7j8JvQVO209x8IGTNh2hc5FjOJl8qTeHlPJZter8RvITXWct2MDOaPGcS0zDhCgoO8/TlERESkwxQGA1lTDRx642QArDrktEenwahLYcgsbPoMdjUl8sruEl7ZUMLeY7VALaMHR/P1udnMH5vMmMHRmuoVERHppRQGA4mvDY5ugbzVTvgr3Ojc8xc6ALLOhZlfgWFzaY7JYnN+Na/sKuHVFQUUVe8nyMC0zP9v786Do6zvOI6/f0kIZyIggUTCIUKAIOABah0PROvBeNSrxc44ddTpqLVVZuxox3aGse3UY1qPkdFR692p1GM6MrUCXhVPiAgoZzgLiJgAKqAhkHz7x+8Xs7vNEneN2ezzfF4zO3n22f09z+/34dnNl+dKf353bjVnVg9iSP9euR6NiIiIdAAVg1G3a2Prnr/1b8K+LwAHhx2NnTSD+kEn8hFVrKzbx6r1u1n19iesr6+lqdnoXlTAKVVl3HjGKE4fO4j+vYtzPRoRERHpYCoGo2bfbtjwZmsBuHM9AM0lh7Fz6Fms6DWZt5rG8WG9Y9WC3exuaACWAVDZrydjyks4a1w54ysP4eRRA+hVrE1EREQkyvSbPt+ZQd1qqJ0Ha+djm97FNe/nQGFPNpUew8L+5zBn7xjeqesPdf68vpLuexhTUcIFRx3GmPJSxpSXUFVeoit/RUREYkjFYD5q3Ov3/tXOg9r58MVmALZ1P5x5No2XG4/kg+Yqmr4uZsSA3oweVsKvK3zRN7q8hMF9e+qCDxEREQFUDOYHM9ix9pvizza9jWtqpLGgJ4uLJvLi/jN5vekoGgrKOWV0GReOHMCtFaWMHNiHHt0Kc917ERER6cJUDHZVjV/5e/2Fw78tN3zeVjyM+U1n8nLjBBbbaMYOKWPKcQN5YHQZ4wcfQqH+dJuIiIhkQMVgV7KnDpa/ALXzsI1v4Q400FjQgw8LxzNn/2m80XwUDUWVnFpdxvTRZcwaOYB+usJXREREvgMVg7lmBpsXYosehuX/xDXvZ3u3SuYdmMq8xgnUMJbxQwdx6ollPFhVRnVFKQXa+yciIiIdRMVgjjQ17OHTt5+ix5LHOHT3avbSi2cPTOXppjPYW3wEU8aX8dOqMmaNGqCrfEVEROR7o2KwkzTsb+LD/37O2hUfMnDN0/zgy7kMdl+xsnkojxRfS/2I85k4YjAPHN6fUQP76GpfERER6RQqBr8nu/Y2UrNpFzUbd1KzoY6B217nMjefyws/Yj9FrOg3hS/HX8GIY07n5n76024iIiKSGyoGO0j9nn0sqK1j4QZfANZ+tocBfMFl3d7gwW6vUVZUR0PPcr6e9Bt6Hn8lE/sMzHWXRURERFQMdpSajTuZMXspJd0L+Un5J8waOpeR9a9S0Lwfhk+ByVfTo+ocKFTkIiIi0nWoMukgJw3rxTs/3EzFmqdw2z+G7qUw+SqYfDUMGJXr7omIiIi0ScVgB+mzYR59FtwMg46Ec++BCT+G4t657paIiIjIQeVtMeicOxu4FygEHjGz23Paoerzoe9cGHI86EpgERERyRMFue5ANpxzhcAs4BygGrjMOVed004VdYehJ6gQFBERkbySl8UgcByw1szWm1kj8AxwQY77JCIiIpJ38rUYHAxsTni+JcwTERERkQzkazH4rTjnfu6cq3HO1dTV1eW6OyIiIiJdTr4Wg1uBIQnPK8O8JGb2kJlNR/0IGQAAB3lJREFUMrNJZWVlndY5ERERkXyRr8XgImCUc+5w51wxMB14Mcd9EhEREck7eXlrGTM74Jy7HpiLv7XMo2a2PMfdEhEREck7eVkMApjZS8BLue6HiIiISD7L18PEIiIiItIBVAyKiIiIxJiKQREREZEYc2aW6z50CudcHbDpe17NAKD+e15HPlEeyZRHK2WRTHkkUx6tlEWyKOXR3liGmVmn3BcvNsVgZ3DO1ZjZpFz3o6tQHsmURytlkUx5JFMerZRFsijl0ZXGosPEIiIiIjGmYlBEREQkxlQMdqyHct2BLkZ5JFMerZRFMuWRTHm0UhbJopRHlxmLzhkUERERiTHtGRQRERGJMzOL7AMYArwOrACWAzeE+f2B+UBt+NkvzB8DvAvsA25KWdYNwMdhOTceZJ1nA6uBtcAtCfNPBxYDS4C3gJFp2h8LfBTa30fr3ttLw7qbgUnKg5nA1tB+CTAt5nlMDH37CJgDlMYgiz8Cm4E9KfOvCTm0tK+OybaRLo+7af2crAE+j3IWQC/gX8CqsJ7bE147JbQ/AFyS6XYRwTyuAOoSto+r45pHGMc7wF6gIfS7MkfjmBrG8THwBFCUpv3hwPuh/WygONvtPOMPQj49gArgmDBdgv8irAbubAkeuAW4I0wPBCbjv1RvSljOkeEfpRf+7zm/kmYjKwTWASOAYmAp4RdRWPfYMH0d8HiaPi8ETgAc8G/gnDB/LDAaeIPsi8Eo5TEz9QMY8zwWAaeG6SuB38cgixNCv1OLn9KE6fOBl2OybbSZR8p7fgk8GuUswvJPC9PFwAJaPyfDgQnAk2RfDEYpjyuA+7PJIWp5hHHMB34WxrEZeLGzx4E/YrsZqArvuw24Kk32/wCmh+kHgWuz3c4jfZjYzLaZ2eIwvRtYCQwGLsBX24SfPwrv+czMFgH7UxY1FnjfzL4yswPAf4CL2ljlccBaM1tvZo3AM2FdAAaUhulDgE9SGzvnKvC/yN4z/y/6ZELfVprZ6kwzSBSlPDpCxPKoAt4M0/OBi79dCmHleZZF6MN7ZratjflfJjztHZaXkSjlkeIy4O/tvCd1uXmVRVj+62G6Eb+HpDI832hmy/BHWLISpTw6QlTyCJ+dw4DXwjgW4/c0dvY4DgUazWxNeF+b3+fOOYffg/hcG33LeDuPdDGYyDk3HDgav0t1UMKX5qfAoHaafwyc7Jw71DnXC5iG36WcajC+om+xJcwDuBp4yTm3BbgcuD1N+y1p2neoiORxvXNumXPuUedcv3b6fFARyGM5rV+Il6ZZ/7eSJ1m0N4ZfOOfW4f9X/6tM26csazh5ngeAc24Y/rDSa9m0D8sYTh5l4ZzrC5wHvNpO37ISkTwuDt+jzznnsv7eCMsfTn7nsRS4KIzjRPzevfJOHkc9UOSca7kZ9SVp2h+KP+XjQEr7rMSiGHTO9QGexx+7T9xrQNjDctA9B2a2ErgDmAe8jD8foSnDbszAn9dWCTwG/CXD9h0mInk8ABwBHAVsA/6cYftvRCSPK4HrnHMf4A9xNGbYHohMFpjZLDM7ArgZ+G2m7VtEJY9gOvCcmWW6fiD/snDOFeH3gt5nZuszXE+7IpLHHGC4mU3A74F6Il379kQkj5vwe9tW4AvarZ09jrCO6cDdzrmFwO5M2mcr8sWgc64bfgP9m5m9EGZvD4fcWg69fdbecszsr2Z2rJmdAuwC1jjnhjjnloTHNfgNJ7GCrwS2OufKgIlm9n6YPxs40TlXmND+ttC+MrV91oNvQ1TyMLPtZtZkZs3Aw/hd7nHOY5WZnWlmx+K/4NZFPItv6xmyPLUggnlMJ8NDxC3yNIuHgFozuyebMR9MVPIwsx1mti88fQR/gVrGopIH/mKaHvj/QE4P8z7tzHGE9u+a2clmdhz+9J81Yf1zQ/tHgB1A31DUJrXPin2HE0e7+gN/kv2TwD0p8+8i+YTQO1Nen8n/Xx00MPwcir8KqW8b6ysC1uMPxbScEDouzK+n9YTQq4Dn0/Q59QKBaSmvv0H2F5BEJg+gIuE9M4BnYp5Hy/oLwpiujHoWCctKvYBkVML0eUBNHLaNdHmEeWOAjYSrz6OeBfAHfHFSkOb1x8n+ApLI5EHy9+iFwHtxzSOMY3bLOPAXhtzW2eNIad8dfwh7appxPEvyBSTXZbudZ/xByKcHcBJ+l+4yEm5Bgj/W/ir+UvFXgP7h/eX44+5fAp+H6dLw2gL8ruOlwOkHWec0fBW/Drg1Yf6F+NtdLMUXdCPStJ+EP+dgHXA/rbcOuTD0Zx+wHZgb8zyeCu2X4a/4qoh5HjeE5a7BnyeT0S/9PM3izrDe5vBzZph/L/4cyiX4W16Mi8m20WYe4bWZJNxSJMpZ4PeQGP5ChqRbpuCv/tyCv33IDmB5zPP4E/6zshT/WRkT1zwSxrEPf2uZHfi7EeRiHHeF/q3m4LemGYHfQbAWXxh2z3Y7118gEREREYmxyJ8zKCIiIiLpqRgUERERiTEVgyIiIiIxpmJQREREJMZUDIqIiIjEmIpBERERkRhTMSgiIiISYyoGRURERGLsf9AmhF6Gk/vXAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Построим графики кумулятивной выручки по дням и группам A/B-тестирования:\n",
    "\n",
    "\n",
    "# датафрейм с кумулятивным количеством заказов и кумулятивной выручкой по дням в группе А\n",
    "cumulativeRevenueA = cumulativeData[cumulativeData['group']=='A'][['date','revenue', 'orders']]\n",
    "\n",
    "# датафрейм с кумулятивным количеством заказов и кумулятивной выручкой по дням в группе B\n",
    "cumulativeRevenueB = cumulativeData[cumulativeData['group']=='B'][['date','revenue', 'orders']]\n",
    "print('график кумулятивной выручки по дням и группам A/B-тестирования')\n",
    "plt.figure(figsize=(10,5))\n",
    "# Строим график выручки группы А\n",
    "plt.plot(cumulativeRevenueA['date'], cumulativeRevenueA['revenue'], label='A')\n",
    "\n",
    "# Строим график выручки группы B\n",
    "plt.plot(cumulativeRevenueB['date'], cumulativeRevenueB['revenue'], label='B')\n",
    "\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "Из графика видно, что 2019-08-03 выручка двух групп сравнялась, однако выручка группы В увеличивается в большем объёме. так же можно сказать, что в период 2019-08-17 - 2019-08-21 наблюдается резкий рост выручки группы В\n",
    "\n",
    "\n",
    "Producción\n",
    "Se puede ver en el gráfico que el 2019-08-03, los ingresos de los dos grupos se igualaron, sin embargo, los ingresos del grupo B están aumentando en mayor volumen. También se puede decir que en el período 2019-08-17 - 2019-08-21 hay un fuerte aumento en los ingresos del grupo B"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### График кумулятивного среднего чека по группам (Gráfico de la factura media acumulada por grupo)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "График кумулятивного среднего чека по группам\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f47ed60ff50>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Построим графики среднего чека по группам\n",
    "print('График кумулятивного среднего чека по группам')\n",
    "plt.figure(figsize=(10,5))\n",
    "plt.plot(cumulativeRevenueA['date'], cumulativeRevenueA['revenue']/cumulativeRevenueA['orders'], label='A')\n",
    "plt.plot(cumulativeRevenueB['date'], cumulativeRevenueB['revenue']/cumulativeRevenueB['orders'], label='B')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "Из графика видно что средний чек растёт и показатели группы В лучше нежели показатели группы А. однако показатели среднего чека не учтановились равномерно и средний чек группы В пощёл на спад начиная с 2019-08-21\n",
    "\n",
    "\n",
    "Producción\n",
    "Se puede ver en el gráfico que el cheque promedio está creciendo y los indicadores del grupo B son mejores que los del grupo A.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### График относительного изменения кумулятивного среднего чека группы B к группе A (Gráfico del cambio relativo en el control promedio acumulado del grupo B al grupo A)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "График относительного изменения кумулятивного среднего чека группы B к группе A\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.lines.Line2D at 0x7f47ed566690>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#график относительного изменения кумулятивного среднего чека\n",
    "# собираем данные в одном датафрейме\n",
    "mergedCumulativeRevenue = cumulativeRevenueA.merge(cumulativeRevenueB, left_on='date', right_on='date', how='left', suffixes=['A', 'B'])\n",
    "plt.figure(figsize=(10,5))\n",
    "# cтроим отношение средних чеков\n",
    "print('График относительного изменения кумулятивного среднего чека группы B к группе A')\n",
    "plt.plot(mergedCumulativeRevenue['date'], (mergedCumulativeRevenue['revenueB']/mergedCumulativeRevenue['ordersB'])/(mergedCumulativeRevenue['revenueA']/mergedCumulativeRevenue['ordersA'])-1)\n",
    "# добавляем ось X\n",
    "plt.axhline(y=0, color='black', linestyle='--')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод \n",
    "В нескольких точках график различия между сегментами резко «скачет». Следовательно в даных присутствуют крупные заказы и выбросы.\n",
    "\n",
    "Producción\n",
    "En varios puntos, el gráfico de la diferencia entre los segmentos \"salta\" bruscamente. En consecuencia, hay grandes pedidos y emisiones en los datos."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### График кумулятивной конверсии по группам (Tabla de conversión acumulada por grupo)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f47ecd10190>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#кумулятивная конверсия\n",
    "cumulativeData['conversion'] = cumulativeData['orders']/cumulativeData['visitors']\n",
    "# отделяем данные по группе A\n",
    "cumulativeDataA = cumulativeData[cumulativeData['group']=='A']\n",
    "\n",
    "# отделяем данные по группе B\n",
    "cumulativeDataB = cumulativeData[cumulativeData['group']=='B']\n",
    "\n",
    "# строим графики\n",
    "plt.figure(figsize=(10,5))\n",
    "plt.plot(cumulativeDataA['date'], cumulativeDataA['conversion'], label='A')\n",
    "plt.plot(cumulativeDataB['date'], cumulativeDataB['conversion'], label='B')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "Из графика видно что конверсия группы В превышает конверсию группы А, однако график не прищёл к равноерности. Возможно тест следует остановить.\n",
    "\n",
    "Producción\n",
    "Se puede ver en el gráfico que la conversión del grupo B excede la conversión del grupo A, pero el gráfico no se adhiere a la uniformidad. Quizás debería detenerse la prueba."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### график относительного изменения кумулятивной конверсии группы B к группе A (gráfico del cambio relativo en la conversión acumulada del grupo B al grupo A)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "график относительного изменения кумулятивной конверсии группы B к группе A\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.lines.Line2D at 0x7f47eccd3f50>"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#строим график относительного изменения кумулятивной конверсии группы B к группе A.\n",
    "mergedCumulativeConversions = cumulativeDataA[['date','conversion']].merge(cumulativeDataB[['date','conversion']], left_on='date', right_on='date', how='left', suffixes=['A', 'B'])\n",
    "print('график относительного изменения кумулятивной конверсии группы B к группе A')\n",
    "plt.figure(figsize=(10,5))\n",
    "plt.plot(mergedCumulativeConversions['date'], mergedCumulativeConversions['conversionB']/mergedCumulativeConversions['conversionA']-1, label=\"Относительный прирост конверсии группы B относительно группы A\")\n",
    "plt.legend()\n",
    "\n",
    "plt.axhline(y=0, color='blue', linestyle='--')\n",
    "plt.axhline(y=0.2, color='green', linestyle='--')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "В целом отношение конверсии ещё не установилось, и сейчас делать какие-либо выводы по тесту нельзя. Следует проанализировать аномалии для более определённой интерпритиции картины происходящего.\n",
    "\n",
    "Producción\n",
    "En general, la tasa de conversión aún no se ha establecido y ahora es imposible sacar conclusiones de la prueba. Las anomalías deben analizarse para obtener una interpretación más definida de la imagen de lo que está sucediendo."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### точечный график количества заказов по пользователям, 99 и 95 перцентили (gráfico de dispersión del número de pedidos por usuarios, percentiles 99 y 95)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "точечный график количества заказов по пользователям\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7f47ecbe7810>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "report=orders.groupby('visitorId').agg({'transactionId':'count'})\n",
    "x_values = pd.Series(range(0,len(report['transactionId'])))\n",
    "print('точечный график количества заказов по пользователям')\n",
    "plt.scatter(x_values, report['transactionId']) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "95 и 99 перцентиль количества заказов по пользователям: [2. 4.]\n"
     ]
    }
   ],
   "source": [
    "print('95 и 99 перцентиль количества заказов по пользователям:',np.percentile(report['transactionId'], [95, 99])) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "Из графика видно, что наиболее часто встречается 1 и 2 заказа, исходя из перцентилей заказы от 3 и выше встречаются с наименьшей частотой, соответственно можно установить границу на 95 перцентиле.\n",
    "\n",
    "\n",
    "Producción\n",
    "Se puede ver en el gráfico que los órdenes más comunes son 1 y 2, según los percentiles, los órdenes de 3 y más se encuentran con la frecuencia más baja, respectivamente, puede establecer el borde en el percentil 95."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### точечный график стоимостей заказов, 99 и 95 перцентили (gráfico de dispersión de valores de orden, percentiles 99 y 95)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "точечный график стоимостей заказов\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7f477da56510>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x_values = pd.Series(range(0,len(orders['revenue'])))\n",
    "print('точечный график стоимостей заказов')\n",
    "plt.scatter(x_values, orders['revenue']) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "90, 95 и 99 перцентиль стоимостей заказов: [18168.  28000.  58233.2]\n"
     ]
    }
   ],
   "source": [
    "print('90, 95 и 99 перцентиль стоимостей заказов:',np.percentile(orders['revenue'], [90,95, 99])) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "Из графика видно, что наиболее часто втречающаяся стоимость заказов находится ниже отметки в 20000. Отсекаем данные заказов по 95 перцентилю.\n",
    "\n",
    "Producción\n",
    "Se puede ver en el gráfico que el valor de pedido encontrado con más frecuencia está por debajo de la marca de 20 000. Corte los datos de pedido en el percentil 95."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### статистическая значимость различий в конверсии между группами по «сырым» данным (significación estadística de las diferencias en la conversión entre grupos según los datos brutos)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        date  ordersPerDateA  revenuePerDateA  ordersPerDateB  \\\n",
      "0 2019-08-01              24           148579              21   \n",
      "1 2019-08-02              20            93822              24   \n",
      "2 2019-08-03              24           112473              16   \n",
      "3 2019-08-04              16            70825              17   \n",
      "4 2019-08-05              25           124218              23   \n",
      "\n",
      "   revenuePerDateB  ordersCummulativeA  revenueCummulativeA  \\\n",
      "0           101217                  24               148579   \n",
      "1           165531                  44               242401   \n",
      "2           114248                  68               354874   \n",
      "3           108571                  84               425699   \n",
      "4            92428                 109               549917   \n",
      "\n",
      "   ordersCummulativeB  revenueCummulativeB  visitorsPerDateA  \\\n",
      "0                  21               101217               719   \n",
      "1                  45               266748               619   \n",
      "2                  61               380996               507   \n",
      "3                  78               489567               717   \n",
      "4                 101               581995               756   \n",
      "\n",
      "   visitorsPerDateB  visitorsCummulativeA  visitorsCummulativeB  \n",
      "0               713                   719                   713  \n",
      "1               581                  1338                  1294  \n",
      "2               509                  1845                  1803  \n",
      "3               770                  2562                  2573  \n",
      "4               707                  3318                  3280  \n"
     ]
    }
   ],
   "source": [
    "#Посчитаем статистическую значимость различий в конверсии\n",
    "\n",
    "visitorsADaily = visitors[visitors['group'] == 'A'][['date', 'visitors']]\n",
    "visitorsADaily.columns = ['date', 'visitorsPerDateA']\n",
    "\n",
    "visitorsACummulative = visitorsADaily.apply(\n",
    "    lambda x: visitorsADaily[visitorsADaily['date'] <= x['date']].agg(\n",
    "        {'date': 'max', 'visitorsPerDateA': 'sum'}\n",
    "    ),\n",
    "    axis=1,\n",
    ")\n",
    "visitorsACummulative.columns = ['date', 'visitorsCummulativeA']\n",
    "\n",
    "visitorsBDaily = visitors[visitors['group'] == 'B'][['date', 'visitors']]\n",
    "visitorsBDaily.columns = ['date', 'visitorsPerDateB']\n",
    "\n",
    "visitorsBCummulative = visitorsBDaily.apply(\n",
    "    lambda x: visitorsBDaily[visitorsBDaily['date'] <= x['date']].agg(\n",
    "        {'date': 'max', 'visitorsPerDateB': 'sum'}\n",
    "    ),\n",
    "    axis=1,\n",
    ")\n",
    "visitorsBCummulative.columns = ['date', 'visitorsCummulativeB']\n",
    "\n",
    "ordersADaily = (\n",
    "    orders[orders['group'] == 'A'][['date', 'transactionId', 'visitorId', 'revenue']]\n",
    "    .groupby('date', as_index=False)\n",
    "    .agg({'transactionId': pd.Series.nunique, 'revenue': 'sum'})\n",
    ")\n",
    "ordersADaily.columns = ['date', 'ordersPerDateA', 'revenuePerDateA']\n",
    "\n",
    "ordersACummulative = ordersADaily.apply(\n",
    "    lambda x: ordersADaily[ordersADaily['date'] <= x['date']].agg(\n",
    "        {'date': 'max', 'ordersPerDateA': 'sum', 'revenuePerDateA': 'sum'}\n",
    "    ),\n",
    "    axis=1,\n",
    ").sort_values(by=['date'])\n",
    "ordersACummulative.columns = [\n",
    "    'date',\n",
    "    'ordersCummulativeA',\n",
    "    'revenueCummulativeA',\n",
    "]\n",
    "\n",
    "ordersBDaily = (\n",
    "    orders[orders['group'] == 'B'][['date', 'transactionId', 'visitorId', 'revenue']]\n",
    "    .groupby('date', as_index=False)\n",
    "    .agg({'transactionId': pd.Series.nunique, 'revenue': 'sum'})\n",
    ")\n",
    "ordersBDaily.columns = ['date', 'ordersPerDateB', 'revenuePerDateB']\n",
    "\n",
    "ordersBCummulative = ordersBDaily.apply(\n",
    "    lambda x: ordersBDaily[ordersBDaily['date'] <= x['date']].agg(\n",
    "        {'date': 'max', 'ordersPerDateB': 'sum', 'revenuePerDateB': 'sum'}\n",
    "    ),\n",
    "    axis=1,\n",
    ").sort_values(by=['date'])\n",
    "ordersBCummulative.columns = [\n",
    "    'date',\n",
    "    'ordersCummulativeB',\n",
    "    'revenueCummulativeB',\n",
    "]\n",
    "\n",
    "data = (\n",
    "    ordersADaily.merge(\n",
    "        ordersBDaily, left_on='date', right_on='date', how='left'\n",
    "    )\n",
    "    .merge(ordersACummulative, left_on='date', right_on='date', how='left')\n",
    "    .merge(ordersBCummulative, left_on='date', right_on='date', how='left')\n",
    "    .merge(visitorsADaily, left_on='date', right_on='date', how='left')\n",
    "    .merge(visitorsBDaily, left_on='date', right_on='date', how='left')\n",
    "    .merge(visitorsACummulative, left_on='date', right_on='date', how='left')\n",
    "    .merge(visitorsBCummulative, left_on='date', right_on='date', how='left')\n",
    ")\n",
    "\n",
    "print(data.head(5)) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "ordersByUsersA = (\n",
    "    orders[orders['group'] == 'A']\n",
    "    .groupby('visitorId', as_index=False)\n",
    "    .agg({'transactionId': pd.Series.nunique})\n",
    ")\n",
    "ordersByUsersA.columns = ['visitorId', 'transaction']\n",
    "\n",
    "ordersByUsersB = (\n",
    "    orders[orders['group'] == 'B']\n",
    "    .groupby('visitorId', as_index=False)\n",
    "    .agg({'transactionId': pd.Series.nunique})\n",
    ")\n",
    "ordersByUsersB.columns = ['visitorId', 'transaction']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "# относительный прирост конверсии группы B\n",
    "sampleA = pd.concat([ordersByUsersA['transaction'],pd.Series(0, index=np.arange(data['visitorsPerDateA'].sum() - len(ordersByUsersA['transaction'])), name='transaction')],axis=0)\n",
    "\n",
    "sampleB = pd.concat([ordersByUsersB['transaction'],pd.Series(0, index=np.arange(data['visitorsPerDateB'].sum() - len(ordersByUsersB['transaction'])), name='transaction')],axis=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "За нулевую гипотезу примем утверждение: статистически значимых различий в конверсии между группами нет. Альтернативная гипотеза: статистически значимые различия в конверсии есть.\n",
    "\n",
    "Tomemos el enunciado como hipótesis nula: no hay diferencias estadísticamente significativas en la conversión entre grupos. Hipótesis alternativa: existen diferencias estadísticamente significativas en la conversión."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "P-value 0.008\n",
      "относительное различие конверсии  группы В по отношению к группе А 0.138\n"
     ]
    }
   ],
   "source": [
    "print('P-value {0:.3f}'.format(stats.mannwhitneyu(sampleA, sampleB)[1]))\n",
    "\n",
    "print('относительное различие конверсии  группы В по отношению к группе А {0:.3f}'.format(sampleB.mean() / sampleA.mean() - 1))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "По результатам видно,что p-value меньше чем 0,05, соответственно нулевую гипотезу статистически значимых различий в конверсии между группами нет, отвергаем. А по результатам сравнения видно, что группа В выигрывает по отношению к группе А на 13,8%\n",
    "\n",
    "\n",
    "Producción\n",
    "Los resultados muestran que el p-valor es menor a 0.05, respectivamente, no existe una hipótesis nula de diferencias estadísticamente significativas en la conversión entre los grupos, la rechazamos. Y según los resultados de la comparación, se puede ver que el grupo B gana en relación al grupo A en un 13,8%"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  статистическая значимость различий в среднем чеке заказа между группами по «сырым» данным. (significación estadística de las diferencias en el promedio de recepción de pedidos entre grupos de acuerdo con los datos \"brutos\".)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a class=\"anchor\" id=\"21-bullet\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "За нулевую гипотезу примем утверждение:средние чеки в группах одинаковые. Альтернативная гипотеза: средние чеки групп различаются. \n",
    "\n",
    "\n",
    "\n",
    "Para la hipótesis nula, aceptaremos la afirmación: los controles promedio en los grupos son los mismos. Hipótesis alternativa: los controles medios de los grupos son diferentes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "P-value 0.365\n",
      "относительное различие среднего чека группы В по отношению к группе А0.259\n"
     ]
    }
   ],
   "source": [
    "#относительные различия в среднем чеке между группами\n",
    "print('P-value {0:.3f}'.format(stats.mannwhitneyu(orders[orders['group']=='A']['revenue'], orders[orders['group']=='B']['revenue'])[1]))\n",
    "print('относительное различие среднего чека группы В по отношению к группе А{0:.3f}'.format(orders[orders['group']=='B']['revenue'].mean()/orders[orders['group']=='A']['revenue'].mean()-1))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "По результатам видно,что p-value больше чем 0,05, соответственно причин отвергать нулевую гипотезу и считать, что в среднем чеке есть различия, нет. А по результатам сравнения видно, что группа В выигрывает по отношению к группе А на 25,9%\n",
    "\n",
    "Producción\n",
    "Los resultados muestran que el valor p es mayor que 0.05, respectivamente, no hay razón para rechazar la hipótesis nula y asumir que existen diferencias en la verificación promedio. Y según los resultados de la comparación, se puede ver que el grupo B gana en relación al grupo A en un 25,9%"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### статистическая значимость различий в среднем чеке заказа между группами по «очищенным» данным (significación estadística de las diferencias en el promedio de recepción de pedidos entre grupos de acuerdo con los datos \"depurados\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Аномальных пользователей: (59,)\n"
     ]
    }
   ],
   "source": [
    "usersWithManyOrders = pd.concat(\n",
    "    [\n",
    "        ordersByUsersA[ordersByUsersA['transaction'] > 4]['visitorId'],\n",
    "        ordersByUsersB[ordersByUsersB['transaction'] > 4]['visitorId'],\n",
    "    ],\n",
    "    axis=0,\n",
    ")\n",
    "usersWithExpensiveOrders = orders[orders['revenue'] > 28000]['visitorId']\n",
    "abnormalUsers = (\n",
    "    pd.concat([usersWithManyOrders, usersWithExpensiveOrders], axis=0)\n",
    "    .drop_duplicates()\n",
    "    .sort_values()\n",
    ")\n",
    "#print(abnormalUsers.head(5))\n",
    "print('Аномальных пользователей:',abnormalUsers.shape) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "sampleAFiltered = pd.concat(\n",
    "    [\n",
    "        ordersByUsersA[\n",
    "            np.logical_not(ordersByUsersA['visitorId'].isin(abnormalUsers))\n",
    "        ]['transaction'],\n",
    "        pd.Series(\n",
    "            0,\n",
    "            index=np.arange(\n",
    "                data['visitorsPerDateA'].sum() - len(ordersByUsersA['transaction'])\n",
    "            ),\n",
    "            name='transaction',\n",
    "        ),\n",
    "    ],\n",
    "    axis=0,\n",
    ")\n",
    "\n",
    "sampleBFiltered = pd.concat(\n",
    "    [\n",
    "        ordersByUsersB[\n",
    "            np.logical_not(ordersByUsersB['visitorId'].isin(abnormalUsers))\n",
    "        ]['transaction'],\n",
    "        pd.Series(\n",
    "            0,\n",
    "            index=np.arange(\n",
    "                data['visitorsPerDateB'].sum() - len(ordersByUsersB['transaction'])\n",
    "            ),\n",
    "            name='transaction',\n",
    "        ),\n",
    "    ],\n",
    "    axis=0,\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "За нулевую гипотезу примем утверждение: статистически значимых различий в конверсии между группами нет. Альтернативная гипотеза: статистически значимые различия в конверсии есть.\n",
    "\n",
    "\n",
    "Tomemos el enunciado como hipótesis nula: no hay diferencias estadísticamente significativas en la conversión entre grupos. Hipótesis alternativa: existen diferencias estadísticamente significativas en la conversión."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "p-value 0.009\n",
      "относительное различие конверсии  группы В по отношению к группе А 0.145\n"
     ]
    }
   ],
   "source": [
    "print('p-value {0:.3f}'.format(stats.mannwhitneyu(sampleAFiltered, sampleBFiltered)[1]))\n",
    "print('относительное различие конверсии  группы В по отношению к группе А {0:.3f}'.format(sampleBFiltered.mean()/sampleAFiltered.mean()-1))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "Результаты по конверсии практически не изменились, группа В выигрывает по отношению к группе А на 14,5% в очищенных данных против 13,8% в сырых.\n",
    "\n",
    "\n",
    "\n",
    "Producción\n",
    "Los resultados de conversión se mantuvieron casi sin cambios, el grupo B gana contra el grupo A en un 14,5% en datos limpios frente al 13,8% en datos sin procesar."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  статистическая значимость различий в конверсии между группами по «очищенным» данным (significación estadística de las diferencias en la conversión entre los grupos según los datos \"depurados\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "За нулевую гипотезу примем утверждение:средние чеки в группах одинаковые. Альтернативная гипотеза: средние чеки групп различаются. \n",
    "\n",
    "Para la hipótesis nula, aceptaremos la afirmación: los controles promedio en los grupos son los mismos. Hipótesis alternativa: los controles medios de los grupos son diferentes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " p-value 0.481\n",
      "относительное различие среднего чека группы В по отношению к группе А -0.014\n"
     ]
    }
   ],
   "source": [
    "print(\n",
    "    ' p-value {0:.3f}'.format(\n",
    "        stats.mannwhitneyu(\n",
    "            orders[\n",
    "                np.logical_and(\n",
    "                    orders['group'] == 'A',\n",
    "                    np.logical_not(orders['visitorId'].isin(abnormalUsers)),\n",
    "                )\n",
    "            ]['revenue'],\n",
    "            orders[\n",
    "                np.logical_and(\n",
    "                    orders['group'] == 'B',\n",
    "                    np.logical_not(orders['visitorId'].isin(abnormalUsers)),\n",
    "                )\n",
    "            ]['revenue'],\n",
    "        )[1]\n",
    "    )\n",
    ")\n",
    "\n",
    "print(\n",
    "    'относительное различие среднего чека группы В по отношению к группе А {0:.3f}'.format(\n",
    "        orders[\n",
    "            np.logical_and(\n",
    "                orders['group'] == 'B',\n",
    "                np.logical_not(orders['visitorId'].isin(abnormalUsers)),\n",
    "            )\n",
    "        ]['revenue'].mean()\n",
    "        / orders[\n",
    "            np.logical_and(\n",
    "                orders['group'] == 'A',\n",
    "                np.logical_not(orders['visitorId'].isin(abnormalUsers)),\n",
    "            )\n",
    "        ]['revenue'].mean()\n",
    "        - 1\n",
    "    )\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Вывод\n",
    "P-value увеличился, но и разница между сегментами также увеличилась с 25,9% до -1,4%.\n",
    "\n",
    "Producción\n",
    "El valor p aumentó, pero la diferencia entre los segmentos también aumentó del 25,9% al -1,4%."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Вывод\n",
    "Исходя из полученных данных следует продолжить тест.\n",
    "Не смотря на то, что показатели группы В больше показателей группы А, значения конверсии не установились и колеблются, средний чек не установился, после удаления аномальных заказов разница между сегментами среднего чека снизилась значительно, что привело к тому, что группа В стала проигрывать в среднем чеке группы А на 1,4%(по сырым данным группа В выигпывала на 25%).\n",
    "\n",
    "\n",
    "Producción\n",
    "Con base en los datos obtenidos, la prueba debe continuar.\n",
    "A pesar de que los indicadores del grupo B son superiores a los del grupo A, los valores de conversión no se han establecido y fluctúan, no se ha establecido el cheque promedio, luego de la remoción de pedidos anormales, la diferencia entre los segmentos de el cheque promedio disminuyó significativamente, lo que llevó al hecho de que el grupo B comenzó a perder un cheque promedio del grupo A en un 1.4% (según los datos brutos, el grupo B ganó en un 25%)."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
